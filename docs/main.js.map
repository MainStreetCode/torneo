{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/confirm-dialog/confirm-dialog.component.ts","./src/app/components/confirm-dialog/confirm-dialog.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/game/game-configuration/game-configuration.component.ts","./src/app/components/game/game-configuration/game-configuration.component.html","./src/app/components/game/game-dashboard/game-dashboard-tab.ts","./src/app/components/game/game-dashboard/game-dashboard.component.ts","./src/app/components/game/game-dashboard/game-dashboard.component.html","./src/app/components/game/games/games.component.ts","./src/app/components/game/games/games.component.html","./src/app/components/player/game-player-detail/game-player-detail.component.ts","./src/app/components/player/game-player-detail/game-player-detail.component.html","./src/app/components/player/game-players/game-players.component.ts","./src/app/components/player/game-players/game-players.component.html","./src/app/components/player/player-card/player-card.component.ts","./src/app/components/player/player-card/player-card.component.html","./src/app/components/player/player-search/player-search.component.ts","./src/app/components/player/player-search/player-search.component.html","./src/app/components/progress-dialog/progress-dialog.component.ts","./src/app/components/progress-dialog/progress-dialog.component.html","./src/app/components/round/round-card/round-card.component.ts","./src/app/components/round/round-card/round-card.component.html","./src/app/components/round/round-detail/round-detail.component.ts","./src/app/components/round/round-detail/round-detail.component.html","./src/app/components/round/rounds/rounds.component.ts","./src/app/components/round/rounds/rounds.component.html","./src/app/components/section-header/section-header.component.ts","./src/app/components/section-header/section-header.component.html","./src/app/components/system-messages/system-messages.component.ts","./src/app/components/system-messages/system-messages.component.html","./src/app/components/table/table-detail/table-detail.component.ts","./src/app/components/table/table-detail/table-detail.component.html","./src/app/components/table/tables/tables/tables.component.ts","./src/app/components/table/tables/tables/tables.component.html","./src/app/components/team-player/team-player.component.ts","./src/app/components/team-player/team-player.component.html","./src/app/components/team/team.component.ts","./src/app/components/team/team.component.html","./src/app/components/user/login/login-dialog/login-dialog-component.ts","./src/app/components/user/login/login-dialog/login-dialog-component.html","./src/app/components/user/login/login.component.html","./src/app/components/user/login/login.component.ts","./src/app/components/user/user-profile/user-profile.component.ts","./src/app/components/user/user-profile/user-profile.component.html","./src/app/services/auth/auth.service.ts","./src/app/services/collection.ts","./src/app/services/game/game.service.ts","./src/app/services/gamePlayer/game-player.service.ts","./src/app/services/message/message.service.ts","./src/app/services/round-mediator/round-mediator.service.ts","./src/app/services/round/round.service.ts","./src/app/services/table/table.service.ts","./src/app/services/team/team.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GamePlayerDetailComponent } from './components/player/game-player-detail/game-player-detail.component';\nimport { GamePlayersComponent } from './components/player/game-players/game-players.component';\nimport { GameConfigurationComponent } from './components/game/game-configuration/game-configuration.component';\nimport { GamesComponent } from './components/game/games/games.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { GameDashboardComponent } from './components/game/game-dashboard/game-dashboard.component';\nimport { RoundsComponent } from './components/round/rounds/rounds.component';\nimport { RoundDetailComponent } from './components/round/round-detail/round-detail.component';\nimport { UserProfileComponent } from './components/user/user-profile/user-profile.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'games', component: GamesComponent },\n  { path: 'gamePlayers', component: GamePlayersComponent },\n  { path: 'game/:gameId/player/:playerId', component: GamePlayerDetailComponent },\n  { path: 'game/:gameId', component: GameDashboardComponent },\n  { path: 'game/:gameId/dashboard', component: GameDashboardComponent },\n  { path: 'game/:gameId/configuration', component: GameConfigurationComponent },\n  { path: 'game/:gameId/rounds', component: RoundsComponent },\n  { path: 'game/:gameId/round/:roundId', component: RoundDetailComponent },\n  { path: 'userProfile', component: UserProfileComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport firebase from 'firebase/compat/app';\nimport { Observable, Subscription } from 'rxjs';\nimport { AuthService } from './services/auth/auth.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport { LoginDialogComponent } from './components/user/login/login-dialog/login-dialog-component';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'Torneo';\n  isLoggedIn$: Observable<boolean>;\n  private subscriptions: Subscription[] = [];\n\n  constructor(private router: Router,\n              private authService: AuthService,\n              public dialog: MatDialog) {\n\n  }\n\n  ngOnInit(): void {\n    this.isLoggedIn$ = this.authService.isLoggedIn$;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  login(): void {\n    this.openDialog();\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(LoginDialogComponent, {\n      panelClass: 'dialog-container'\n      // data: { null }\n    });\n\n    this.subscriptions.push(\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n      })\n    );\n  }\n\n  logout(): void {\n    firebase.auth().signOut();\n    this.goHome();\n  }\n\n  goHome(): void {\n    this.router.navigateByUrl('');\n  }\n\n  userProfile(): void {\n    this.router.navigateByUrl('userProfile');\n  }\n}\n","<div class=\"background-pattern\">\n  <div class=\"center main-content\">\n    <mat-toolbar color=\"primary\" class=\"header\">\n      <mat-icon>bar_chart</mat-icon>\n      <div class=\"title\">    \n        <span (click)=\"goHome()\">{{title}}</span>\n      </div>\n\n      <div *ngIf=\"(isLoggedIn$ | async) === false\">\n        <button mat-raised-button color=\"accent\" (click)=\"login()\">Login</button>\n      </div>\n\n      <div *ngIf=\"(isLoggedIn$ | async)\">\n        <button mat-raised-button color=\"accent\" (click)=\"logout()\">Logout</button>\n      </div>\n\n      <div *ngIf=\"(isLoggedIn$ | async)\">\n        <button mat-icon-button color=\"primary\" aria-label=\"User profile\" (click)=\"userProfile()\">\n          <mat-icon color=\"accent\">account_circle</mat-icon>\n        </button>\n      </div>\n    </mat-toolbar>\n\n    <!-- <nav> -->\n      <!-- <a routerLink=\"/dashboard\">Dashboard</a> -->\n      <!-- <a routerLink=\"/games\">Games</a> -->\n      <!-- <a routerLink=\"/players\">Players</a>   -->\n    <!-- </nav> -->\n\n    <router-outlet></router-outlet>\n    <!-- <app-system-messages></app-system-messages> -->\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { GamePlayersComponent } from './components/player/game-players/game-players.component';\nimport { FormsModule } from '@angular/forms';\nimport { GamePlayerDetailComponent } from './components/player/game-player-detail/game-player-detail.component';\nimport { SystemMessagesComponent } from './components/system-messages/system-messages.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PlayerSearchComponent } from './components/player/player-search/player-search.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AngularFireModule } from '@angular/fire/compat';\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { environment } from 'src/environments/environment';\nimport { MatCardModule } from '@angular/material/card';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { GameConfigurationComponent } from './components/game/game-configuration/game-configuration.component';\nimport { GamesComponent } from './components/game/games/games.component';\nimport { UserProfileComponent } from './components/user/user-profile/user-profile.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { GameDashboardComponent } from './components/game/game-dashboard/game-dashboard.component';\nimport { RoundsComponent } from './components/round/rounds/rounds.component';\nimport { RoundDetailComponent } from './components/round/round-detail/round-detail.component';\nimport { TableDetailComponent } from './components/table/table-detail/table-detail.component';\nimport { TeamComponent } from './components/team/team.component';\nimport { TeamPlayerComponent } from './components/team-player/team-player.component';\nimport { LoginDialogComponent } from './components/user/login/login-dialog/login-dialog-component';\nimport { MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\nimport { TablesComponent } from './components/table/tables/tables/tables.component';\nimport { RoundCardComponent } from './components/round/round-card/round-card.component';\nimport { PlayerCardComponent } from './components/player/player-card/player-card.component';\nimport { SectionHeaderComponent } from './components/section-header/section-header.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ProgressDialogComponent } from './components/progress-dialog/progress-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GamePlayersComponent,\n    GamePlayerDetailComponent,\n    SystemMessagesComponent,\n    DashboardComponent,\n    PlayerSearchComponent,\n    GamesComponent,\n    GameConfigurationComponent,\n    UserProfileComponent,\n    LoginComponent,\n    GameDashboardComponent,\n    RoundsComponent,\n    RoundDetailComponent,\n    TableDetailComponent,\n    TeamComponent,\n    TeamPlayerComponent,\n    LoginDialogComponent,\n    ConfirmDialogComponent,\n    TablesComponent,\n    RoundCardComponent,\n    PlayerCardComponent,\n    SectionHeaderComponent,\n    ProgressDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatDialogModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatInputModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatProgressSpinnerModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    QRCodeModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true} }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ConfirmDialogData } from './confirm-dialog-data';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title = 'Confirm Dialog';\n  message = '';\n  confirmButtonText = 'Ok';\n  cancelButtonText = 'Cancel';\n  showActionButtons = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogData,\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.title) {\n      this.title = this.data.title;\n    }\n    if (this.data.message) {\n      this.message = this.data.message;\n    }\n    if (this.data.confirmButtonText) {\n      this.confirmButtonText = this.data.confirmButtonText;\n    }\n    if (this.data.cancelButtonText) {\n      this.cancelButtonText = this.data.cancelButtonText;\n    }\n    if (this.data.showActionButtons !== undefined) {\n      this.showActionButtons = this.data.showActionButtons;\n    }\n  }\n\n  cancel(): void {\n    this.dialogRef.close(false);\n  }\n\n  confirm(): void {\n    this.dialogRef.close(true);\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"header\">\n    <div class=\"flex-box-item\">\n        <h1 mat-dialog-title>{{title}}</h1>\n    </div>\n    <div>\n        <button mat-icon-button aria-label=\"close\" (click)=\"cancel()\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n</mat-toolbar>\n\n<div class=\"content\">\n    <p class=\"mat-body\">{{message}}</p>\n</div>\n\n<div *ngIf=\"showActionButtons\">\n    <mat-divider></mat-divider>\n\n    <div class=\"content flex-box-rows\">\n        <div class=\"flex-box-item\">\n            <button mat-raised-button color=\"warn\" class=\"full-width\" (click)=\"cancel()\">{{cancelButtonText}}</button>\n        </div>\n        \n        <div class=\"flex-box-item\">\n            <button mat-raised-button color=\"primary\" class=\"full-width\" (click)=\"confirm()\">{{confirmButtonText}}</button>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Game } from 'src/app/services/game/game';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { GamePlayerService } from 'src/app/services/gamePlayer/game-player.service';\nimport { GamePlayer } from '../player/game-player';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  players: GamePlayer[] = [];\n  public games: Game[];\n\n  constructor(private gameService: GameService) { }\n\n  ngOnInit(): void {\n    this.gameService.games$.subscribe({\n      next: (games) => {\n        this.games = games;\n      }\n    });\n  }\n}\n","<app-games></app-games>\n","import { Dialog } from '@angular/cdk/dialog';\nimport { Location } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { of, Subscription } from 'rxjs';\nimport { Game } from 'src/app/services/game/game';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { environment } from 'src/environments/environment';\nimport { ConfirmDialogComponent } from '../../confirm-dialog/confirm-dialog.component';\nimport { ProgressDialogComponent } from '../../progress-dialog/progress-dialog.component';\n\n@Component({\n  selector: 'app-game-configuration',\n  templateUrl: './game-configuration.component.html',\n  styleUrls: ['./game-configuration.component.css']\n})\nexport class GameConfigurationComponent implements OnInit, OnDestroy {\n  public gameId: string;\n  public game?: Game;\n  public gameURL: string;\n  public sectionName: string;\n  public isAdmin$ = of(false);\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private gameService: GameService,\n    private location: Location,\n    private dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.getGame();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  getGame(): void {\n    this.gameId = this.route.snapshot.paramMap.get('gameId');\n\n    if (!this.gameId) {\n      return;\n    }\n\n    this.gameURL = `${environment.url}/game/${this.gameId}`;\n    const dialogRef = this.dialog.open(ProgressDialogComponent, {});\n\n    this.subscriptions.push(\n      this.gameService.getGame(this.gameId).subscribe({\n        next: (game) => {\n          this.game = game;\n          this.isAdmin$ = this.gameService.isCurrentUserAdmin(this.game.id);\n          this.sectionName = `${game.name.toUpperCase()} Configuration`;\n          dialogRef.close();\n        }\n      })\n    );\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    if (this.game) {\n      this.gameService.updateGame(this.game);\n    }\n  }\n\n  startGame(): void {\n    this.router.navigateByUrl(`/game/${this.game.id}/dashboard?selectedTab=1`);\n  }\n}\n","<div *ngIf=\"(this.isAdmin$ | async) === false\">You do not have access to this page</div>\n<div *ngIf=\"game && (this.isAdmin$ | async)\">\n\n  <app-section-header [sectionName]=\"sectionName\"></app-section-header>\n\n  <div class=\"flex-box-rows justify-content-center\">\n\n    <div class=\"flex-box-columns justify-content-center\">\n      <div class=\"flex-box-rows justify-content-center\">\n        <div ngClass.gt-xs=\"flex-box-rows content mat-typography\" ngClass.lt-sm=\"flex-box-columns content mat-typography\">\n          <div class=\"flex-box-columns\">\n            <div class=\"flex-box-item\">\n              <span class=\"mat-h3\">Game Id: </span>\n              <span class=\"mat-h3\">{{game.id}}</span>\n            </div>\n      \n            <div class=\"flex-box-item\">\n              <mat-form-field appearance=\"fill\" class=\"full-width\" >\n                <mat-label>Game name</mat-label>\n                <input id=\"game-name\" matInput placeholder=\"Angela's Euchre Tournament\" [(ngModel)]=\"game.name\">\n              </mat-form-field>\n            </div>\n            \n            <div class=\"flex-box-item\">\n              <mat-form-field appearance=\"fill\" class=\"full-width\">\n                <mat-label>Number of rounds</mat-label>\n                <input id=\"game-rounds\" matInput placeholder=\"8\" [(ngModel)]=\"game.numberOfRounds\">\n              </mat-form-field>\n            </div>\n            \n            <div class=\"flex-box-item\">\n              <button class=\"full-width\" mat-raised-button color=\"primary\" aria-label=\"Back\" title=\"Back\" (click)=\"save()\">\n                Save\n              </button>\n            </div>\n          </div>\n\n          <div>\n            <qrcode *ngIf=\"gameURL\" [qrdata]=\"gameURL\" [width]=\"256\" [errorCorrectionLevel]=\"'M'\"></qrcode>\n          </div>    \n                      \n        </div>        \n      </div>\n      \n      <div class=\"flex-box-item content\">\n        <button class=\"full-width\" mat-raised-button color=\"primary\" aria-label=\"Back\" title=\"Back\" (click)=\"startGame()\">\n          Start Game\n        </button>\n      </div>\n\n    </div>\n  </div>\n\n  <!-- Player list -->\n  <app-game-players [game]=\"game\"></app-game-players>\n</div>","export enum GameDashboardTab {\n    Players = 'players',\n    Rounds = 'rounds'\n}\n","import { Location } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Game } from 'src/app/services/game/game';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { environment } from 'src/environments/environment';\nimport { GameDashboardTab } from './game-dashboard-tab';\n\n@Component({\n  selector: 'app-game-dashboard',\n  templateUrl: './game-dashboard.component.html',\n  styleUrls: ['./game-dashboard.component.css']\n})\n\nexport class GameDashboardComponent implements OnInit, OnDestroy {\n  @Input() game?: Game;\n  sectionName: string;\n  gameURL: string;\n  selectedTab = GameDashboardTab.Players;\n  readonly playersTab = GameDashboardTab.Players;\n  readonly roundsTab = GameDashboardTab.Rounds;\n  private subscriptions: Subscription[] = [];\n\n  constructor(private route: ActivatedRoute, private gameService: GameService, private location: Location, private router: Router) {\n\n  }\n\n  ngOnInit(): void {\n    this.getGame();\n    this.parseURLParams();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  private parseURLParams(): void {\n    this.route.queryParams\n      .subscribe(params => {\n        const tab = params.selectedTab;\n        if (tab) {\n          this.selectedTab = tab;\n        }\n      }\n      );\n  }\n\n  private getGame(): void {\n    const id = this.route.snapshot.paramMap.get('gameId');\n\n    if (!id) {\n      return;\n    }\n\n    this.subscriptions.push(\n      this.gameService.getGame(id).subscribe({\n        next: (game) => {\n          this.game = game;\n          this.gameURL = `${environment.url}/game/${this.game.id}/dashboard`;\n          this.sectionName = `${this.game.name.toUpperCase()} Dashboard`;\n          console.log(this.gameURL);\n        }\n      })\n    );\n  }\n\n  selectTab(tabNumber: number): void {\n    this.selectedTab = tabNumber as unknown as GameDashboardTab;\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: {\n        selectedTab: this.selectedTab\n      },\n      queryParamsHandling: 'merge',\n      // preserve the existing query params in the route\n      skipLocationChange: false\n      // do not trigger navigation\n    });\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n\n","<div *ngIf=\"game\">\n  <app-section-header [sectionName]=\"sectionName\"></app-section-header>\n  <div class=\"flex-box-rows justify-content-center\">\n    <div class=\"flex-box-columns\">\n      <div class=\"flex-box-item\">\n        <span class=\"mat-h3\">Game Id: </span>\n        <span class=\"mat-h3\">{{game.id}}</span>\n      </div>\n      <div class=\"flex-box-item\">\n        <span class=\"mat-h3\">Rounds: </span>\n        <span class=\"mat-h3\">{{game.numberOfRounds ?? 0}}</span>\n      </div>         \n\n      <div>\n        <qrcode *ngIf=\"gameURL\" [qrdata]=\"gameURL\" [width]=\"256\" [errorCorrectionLevel]=\"'M'\"></qrcode>\n      </div>\n    </div>      \n  </div>\n  \n  <mat-tab-group mat-stretch-tabs [selectedIndex]=\"selectedTab\" (selectedIndexChange)=\"selectTab($event)\">\n    <mat-tab>\n      <ng-template mat-tab-label>\n        <mat-icon class=\"example-tab-icon\">group</mat-icon> Players\n      </ng-template>\n      <app-game-players [game]=\"game\"></app-game-players>\n    </mat-tab>\n    <mat-tab>\n      <ng-template mat-tab-label>\n        <mat-icon class=\"example-tab-icon\">table_bar</mat-icon> Rounds\n      </ng-template>\n      <app-rounds [game]=\"game\"></app-rounds>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Game } from 'src/app/services/game/game';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { of, Subscription } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProgressDialogComponent } from '../../progress-dialog/progress-dialog.component';\n@Component({\n  selector: 'app-games',\n  templateUrl: './games.component.html',\n  styleUrls: ['./games.component.css']\n})\n\nexport class GamesComponent implements OnInit, OnDestroy {\n  games: Game[] = [];\n  gameAdminMap: Map<string, boolean> = new Map();\n  isLoggedIn$ = of(false);\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private dialog: MatDialog,\n    private gameService: GameService,\n    private router: Router,\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.getGames();\n\n    this.isLoggedIn$ = this.authService.isLoggedIn$;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  getGames(): void {\n    const dialogRef = this.dialog.open(ProgressDialogComponent, {});\n\n    this.subscriptions.push(\n      this.gameService.games$.subscribe({\n        next: (games) => {\n          this.games = games;\n          this.games.map((game) => {\n            this.gameAdminMap.set(game.id, this.isGameAdmin(game));\n          });\n          dialogRef.close();\n        }\n      })\n    );\n  }\n\n  add(name: string): void {\n    name = name.trim();\n\n    const currentUser = this.authService.getCurrentUser();\n    if (!name || !currentUser) { return; }\n\n    this.subscriptions.push(\n      this.gameService.addGame({ name } as Game, currentUser.uid).subscribe({\n        next: (game) => {\n          if (game) {\n            this.configuration(game);\n          }\n        }\n      })\n    );\n  }\n\n  delete(game: Game): void {\n    this.gameService.deleteGame(game.id);\n  }\n\n  dashboard(game: Game): void {\n    this.router.navigateByUrl(`/game/${game.id}/dashboard`);\n  }\n\n  configuration(game: Game): void {\n    this.router.navigateByUrl(`/game/${game.id}/configuration`);\n  }\n\n  private isGameAdmin(game: Game): boolean {\n    const currentUser = this.authService.getCurrentUser();\n\n    if (currentUser && game.adminIds.find((adminId) => adminId === currentUser.uid)) {\n      return true;\n    }\n\n    return false;\n  }\n}\n","<div>\n  <mat-toolbar class=\"mat-h1\" color=\"secondary\">Games</mat-toolbar>\n\n  <mat-toolbar color=\"accent\"><span>Add new game</span></mat-toolbar>\n\n  <div class=\"content flex-box-rows\" *ngIf=\"isLoggedIn$ | async\">\n    <div>\n      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n        <mat-label>Game name</mat-label>\n        <input matInput id=\"new-game\" #gameName placeholder=\"Angela's Euchre Tournament\" value=\"\">\n      </mat-form-field>\n    </div>\n    <div>\n      <!-- (click) passes input value to add() and then clears the input -->\n      <button mat-raised-button color=\"primary\" [disabled]=\"!gameName.value\" (click)=\"add(gameName.value); gameName.value=''\">\n        <mat-icon>add</mat-icon>    \n        <span class=\"mdc-button__label\">        \n          <span class=\"mdc-button__label\">Create game</span>\n        </span>\n      </button>    \n    </div>\n  </div>\n\n  <div class=\"content\" *ngIf=\"(isLoggedIn$ | async) === false\">\n    Login to start creating games!\n  </div>\n\n  <mat-toolbar color=\"accent\"><span>Game List</span></mat-toolbar>\n  <div class=\"games\">      \n    <mat-card class=\"mdc-card card\" *ngFor=\"let game of games\">\n      <div class=\"mdc-card__primary-action details\" tabindex=\"0\" (click)=\"dashboard(game)\">        \n        <button mat-button (click)=\"dashboard(game)\">{{game.name}}</button>\n      </div>\n      \n      <div *ngIf=\"gameAdminMap.get(game.id)\">\n        <button mat-icon-button color=\"primary\" aria-label=\"game details\" title=\"game details\" (click)=\"configuration(game)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" aria-label=\"delete game\" title=\"delete details\" (click)=\"delete(game)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </div>\n\n    </mat-card>\n  </div>\n</div>","import { Location } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { GamePlayerService } from 'src/app/services/gamePlayer/game-player.service';\nimport { GamePlayer } from '../game-player';\n\n@Component({\n  selector: 'app-game-player-detail',\n  templateUrl: './game-player-detail.component.html',\n  styleUrls: ['./game-player-detail.component.css']\n})\nexport class GamePlayerDetailComponent implements OnInit {\n  @Input() player?: GamePlayer;\n  @Input() gameId?: string;\n  sectionName: string;\n  isAdmin = false;\n  isDisabled = true;\n  isCurrentUserAdmin = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private playerService: GamePlayerService,\n    private location: Location,\n    private gameService: GameService,\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.getPlayer();\n    this.setDisabledState();\n  }\n\n  getPlayer(): void {\n    this.gameId = this.route.snapshot.paramMap.get('gameId');\n    const playerId = this.route.snapshot.paramMap.get('playerId');\n\n    this.playerService.getPlayer(playerId, this.gameId).subscribe({\n      next: (player) => {\n        this.player = player;\n        this.sectionName = `${player.displayName.toUpperCase()} Details`;\n      }\n    });\n\n    this.gameService.getGame(this.gameId).subscribe({\n      next: (game) => {\n        if (game.adminIds && game.adminIds.find((adminId) => adminId === playerId)) {\n          this.isAdmin = true;\n        } else {\n          this.isAdmin = false;\n        }\n      }\n    });\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    if (this.player) {\n      this.playerService.updatePlayer(this.player, this.gameId);\n    }\n  }\n\n  toggleIsAdmin(): void {    \n    if (!this.isCurrentUserAdmin) {\n      return;\n    }\n    \n    // if isAdmin was true, then delete player as admin\n    if (this.isAdmin) {\n      this.gameService.deleteAdmin(this.gameId, this.player.uid);\n    } else {\n      // else isAdmin was false, add player as admin\n      this.gameService.addAdmin(this.gameId, this.player.uid);\n    }\n  }\n\n  private setDisabledState(): void {\n    this.gameService.isCurrentUserAdmin(this.gameId).subscribe({\n      next: (isGameAdmin) => {\n        const currentUser = this.authService.getCurrentUser();\n        this.isCurrentUserAdmin = isGameAdmin\n        \n        // if current user is game admin or is this player then isDisabled = false\n        if (currentUser && currentUser.uid === this.player.uid || isGameAdmin) {\n          this.isDisabled = false;\n        }\n      }\n    });\n  }\n}\n","<div *ngIf=\"player\">\n\n  <app-section-header [sectionName]=\"sectionName\"></app-section-header>\n  \n  <div class=\"content flex-box-columns mat-typography\">\n    <div class=\"flex-box-item\">\n      <span class=\"mat-h3\">Player Id: </span>\n      <span class=\"mat-h3\">{{player.uid}}</span>\n    </div>\n\n    <div class=\"flex-box-item\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Player Name</mat-label>\n        <input matInput placeholder=\"Player Name\" [disabled]=\"isDisabled\" [(ngModel)]=\"player.displayName\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"flex-box-item\">\n      <mat-slide-toggle [checked]=\"isAdmin\" [disabled]=\"!isCurrentUserAdmin\" (click)=\"toggleIsAdmin()\">Admin</mat-slide-toggle>\n    </div>\n  \n    <div class=\"flex-box-item\">\n      <button mat-raised-button color=\"primary\" [disabled]=\"isDisabled\" (click)=\"save()\">Save</button>\n    </div>\n  </div>\n\n\n  <mat-toolbar color=\"accent\"><span>Points</span></mat-toolbar>  \n  <div *ngFor=\"let roundPoints of player.pointsForRound; let i = index\" class=\"content\">\n    <span class=\"mat-h3\">Round: {{roundPoints.roundNumber}}</span>\n    <span class=\"mat-h3\"> - Points: {{roundPoints.points}}</span>\n  </div>\n  \n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { GamePlayer } from '../game-player';\nimport { GamePlayerService } from 'src/app/services/gamePlayer/game-player.service';\nimport { Router } from '@angular/router';\nimport { Game } from 'src/app/services/game/game';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from '../../confirm-dialog/confirm-dialog.component';\nimport { of, Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { LoginDialogComponent } from '../../user/login/login-dialog/login-dialog-component';\nimport { User } from 'firebase/auth';\nimport { RoundService } from 'src/app/services/round/round.service';\n@Component({\n  selector: 'app-game-players',\n  templateUrl: './game-players.component.html',\n  styleUrls: ['./game-players.component.css']\n})\nexport class GamePlayersComponent implements OnInit, OnDestroy {\n  @Input() game?: Game;\n  players: GamePlayer[] = [];\n  isAdmin$ = of(false);  \n  isGameJoinable$ = of(true);\n  currentUser: User;\n  private subscriptions: Subscription[] = [];\n\n  constructor(private playerService: GamePlayerService,\n              private gameService: GameService,\n              private authService: AuthService,\n              private roundService: RoundService,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    if (!this.game?.id) {\n      return;\n    }\n    this.currentUser = this.authService.getCurrentUser();\n    this.isAdmin$ = this.gameService.isCurrentUserAdmin(this.game.id);\n\n    this.getPlayers();\n\n    this.subscriptions.push(\n      this.authService.isLoggedIn$.subscribe({\n        next: (loggedIn) => {\n          if (loggedIn) {\n            this.checkIsGameJoinable();\n          }\n        }\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  getPlayers(): void {\n    this.subscriptions.push(\n      this.playerService.playersForGame(this.game.id).subscribe({\n        next: (players) => {\n          this.players = players.sort((a, b) => {\n            const playerAPoints = this.calculateTotalPoints(a);\n            const playerBPoints = this.calculateTotalPoints(b);\n\n            return playerBPoints - playerAPoints;\n          });\n\n          this.checkIsGameJoinable();\n        }\n      })\n    );\n  }\n\n  private checkIsGameJoinable(): void {\n    this.currentUser = this.authService.getCurrentUser();\n    // if the current user is one of the players in the game, then disable the join button\n    if (this.currentUser && this.players.find((player) => player.uid === this.currentUser.uid)) {\n      this.isGameJoinable$ = of(false);\n    }\n\n    // if the game has already started, then the game is not joinable\n    this.subscriptions.push(\n      this.roundService.roundsForGame(this.game.id).subscribe({\n        next: (rounds) => {\n          if (rounds.length > 0) {\n            this.isGameJoinable$ = of(false);\n          }\n        }\n      })\n    );\n  }\n\n  private calculateTotalPoints(player: GamePlayer): number {\n    let totalPoints = 0;\n    if (player.pointsForRound) {\n      player.pointsForRound.forEach(\n        (roundPoints) => {\n          totalPoints += roundPoints.points;\n        }\n      );\n    }\n    return totalPoints;\n  }\n\n  add(displayName: string): void {\n    displayName = displayName.trim();\n\n    if (!displayName) { return; }\n\n    this.addPlayerToGame({ displayName } as GamePlayer);\n  }\n\n  addPlayerToGame(player: GamePlayer): void {\n    if (this.game) {\n      this.playerService.addPlayer(player, this.game.id);\n    }\n  }\n\n  joinGame(): void {\n    this.subscriptions.push(\n      this.authService.isLoggedIn$.subscribe({\n        next: (loggedIn) => {\n          // if user is logged in then add player to game\n          if (loggedIn) {\n            this.createPlayerFromCurrentUser();\n          } else {\n            this.showJoinDialog();\n          }\n        }\n      })\n    );\n  }\n\n  private createPlayerFromCurrentUser(): void {\n    this.subscriptions.push(\n      this.authService.currentUser$.subscribe({\n        next: (currentUser) => {\n          if (currentUser) {\n            const newPlayer = {\n              uid: currentUser.uid,\n              displayName: currentUser.displayName\n            } as unknown as GamePlayer;\n\n            this.addPlayerToGame(newPlayer);\n          }\n        }\n      })\n    );\n  }\n\n  private showJoinDialog(): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      panelClass: 'dialog-container',\n      data: {\n        title: 'Join Game',\n        message: 'Before you can join a game, you must login first',\n        confirmButtonText: 'Login'\n    }\n    });\n\n    this.subscriptions.push(\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.showLoginDialog();\n        }\n      })\n    );\n  }\n\n  private showLoginDialog(): void {\n    const dialogRef = this.dialog.open(LoginDialogComponent, {\n      panelClass: 'dialog-container',\n    });\n\n    this.subscriptions.push(\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n      })\n    );\n  }\n}\n","<div class=\"players\">\n  <div class=\"flex-box-rows\">\n    <mat-toolbar color=\"accent\">\n      <div class=\"flex-box-item\">Players</div>\n      <div *ngIf=\"(isGameJoinable$ | async)\">\n        <button mat-raised-button color=\"primary\" (click)=\"joinGame()\">Join Game</button>\n      </div>\n    </mat-toolbar>  \n  </div>\n  \n  <mat-toolbar color=\"secondary\">\n    <span>Player List ({{players.length}})</span>\n  </mat-toolbar>\n  <div class=\"player-list\">      \n    <app-player-card *ngFor=\"let player of players; index as i\" [player]=\"player\" [position]=\"i+1\"></app-player-card>\n  </div>\n\n  <div *ngIf=\"this.isAdmin$ | async\">\n    <mat-toolbar color=\"secondary\"><span>Add new player</span></mat-toolbar>\n  \n    <div class=\"content flex-box-rows\">\n      <div>\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n          <mat-label>Player name</mat-label>\n          <input matInput id=\"new-player\" #playerName placeholder=\"Player Name\" value=\"\">\n        </mat-form-field>\n      </div>\n  \n      <div>\n        <!-- (click) passes input value to add() and then clears the input -->\n        <button mat-raised-button color=\"primary\" [disabled]=\"!playerName.value\"\n          (click)=\"add(playerName.value); playerName.value=''\">\n          <mat-icon>add</mat-icon>\n          <span class=\"mdc-button__label\">\n            <span class=\"mdc-button__label\">Add player</span>\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { GamePlayerService } from 'src/app/services/gamePlayer/game-player.service';\nimport { GamePlayer } from '../game-player';\nimport { User } from 'firebase/auth';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { ConfirmDialogComponent } from '../../confirm-dialog/confirm-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-player-card',\n  templateUrl: './player-card.component.html',\n  styleUrls: ['./player-card.component.css']\n})\nexport class PlayerCardComponent implements OnInit {\n  @Input() player: GamePlayer;\n  @Input() position: number;\n  gameId: string;\n  isAdmin$ = of(false);\n  currentUser: User;\n  totalPoints = 0;\n\n  constructor(\n    private playerService: GamePlayerService,\n    private gameService: GameService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.gameId = this.route.snapshot.paramMap.get('gameId');\n\n    this.currentUser = this.authService.getCurrentUser();\n    this.isAdmin$ = this.gameService.isCurrentUserAdmin(this.gameId);\n\n    this.calculatePoints();    \n  }\n\n  public delete(player: GamePlayer): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      panelClass: 'dialog-container',\n      data: {\n        title: 'Delete Player',\n        message: 'Are you sure you want to delete this player?',\n        confirmButtonText: 'Yes'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.playerService.deletePlayer(player.uid, this.gameId);\n      }\n    });\n  }\n\n  public view(player: GamePlayer): void {\n    this.router.navigateByUrl(`/game/${this.gameId}/player/${player.uid}`);\n  }\n\n  private calculatePoints(): void {\n    this.totalPoints = 0;\n    if (this.player.pointsForRound) {\n      this.player.pointsForRound.forEach(\n        (roundPoints) => {\n          this.totalPoints += roundPoints.points;\n        }\n      );\n    }\n  }\n}\n","<mat-card class=\"mdc-card card\">\n    <div class=\"mdc-card__primary-action details\" tabindex=\"0\" (click)=\"view(player)\">\n        <div class=\"flex-box-rows\">\n            <div class=\"mdc-button__label position flex-box-item\">{{position}}</div>\n            <div class=\"mdc-button__label name flex-box-item\">\n                {{player.displayName}}\n                <span *ngIf=\"currentUser && player.uid === currentUser.uid\">(you)</span>\n            </div>          \n            <div class=\"mdc-button__label score\">{{totalPoints}}</div> \n        </div>\n    </div>\n\n    <div *ngIf=\"this.isAdmin$ | async\">\n        <button mat-icon-button color=\"primary\" aria-label=\"game details\" title=\"player details\" (click)=\"view(player)\">\n            <mat-icon>edit</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" aria-label=\"delete game\" title=\"delete player\" (click)=\"delete(player)\">\n            <mat-icon>delete</mat-icon>\n        </button>\n    </div>            \n</mat-card>","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\nimport { GamePlayerService } from 'src/app/services/gamePlayer/game-player.service';\nimport { GamePlayer } from '../game-player';\n\n\n@Component({\n  selector: 'app-player-search',\n  templateUrl: './player-search.component.html',\n  styleUrls: [ './player-search.component.css' ]\n})\nexport class PlayerSearchComponent implements OnInit {\n  players$!: Observable<GamePlayer[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private playerService: GamePlayerService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.players$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.playerService.searchPlayers(term)),\n    );\n  }\n}\n","<div id=\"search-component\">\n    <label for=\"search-box\">Player Search</label>\n    <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n\n    <ul class=\"search-result\">\n        <li *ngFor=\"let player of players$ | async\" >\n            <a routerLink=\"/detail/{{player.uid}}\">\n                {{player.displayName}}\n            </a>\n        </li>\n    </ul>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ProgressDialogData } from './progress-dialog-data';\n\n@Component({\n  selector: 'app-progress-dialog',\n  templateUrl: './progress-dialog.component.html',\n  styleUrls: ['./progress-dialog.component.css']\n})\nexport class ProgressDialogComponent implements OnInit {\n  public message = 'Loading';\n\n  constructor(\n    public dialogRef: MatDialogRef<ProgressDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ProgressDialogData,\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data?.message) {\n      this.message = this.data.message;\n    }\n  }\n}\n","<div>\n    <mat-spinner></mat-spinner>        \n    <div class=\"mat-body progress-dialog-message\">\n        {{ message }}\n    </div>            \n</div>\n    \n           \n\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { EMPTY, of, Subscription, switchMap } from 'rxjs';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { RoundMediatorService } from 'src/app/services/round-mediator/round-mediator.service';\nimport { Round } from 'src/app/services/round/round';\nimport { RoundService } from 'src/app/services/round/round.service';\nimport { ConfirmDialogComponent } from '../../confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-round-card',\n  templateUrl: './round-card.component.html',\n  styleUrls: ['./round-card.component.css']\n})\nexport class RoundCardComponent implements OnInit, OnDestroy {\n  @Input() round: Round;\n  @Input() gameId: string;\n  isAdmin$ = of(false);\n  allTablesPointsConfirmed$ = of(false);\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private gameService: GameService,\n    private roundMediatorService: RoundMediatorService,\n    private dialog: MatDialog,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.allTablesPointsConfirmed$ = this.roundMediatorService.allTablesConfirmed(this.round.id, this.gameId);\n    this.isAdmin$ = this.gameService.isCurrentUserAdmin(this.gameId);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  public delete(round: Round): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      panelClass: 'dialog-container',\n      data: {\n        title: 'Delete Round',\n        message: 'Are you sure you want to delete this round?',\n        confirmButtonText: 'Yes'\n      }\n    });\n\n    this.subscriptions.push(\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.roundMediatorService.deleteRound(round.id, this.gameId);\n        }\n      })\n    );\n  }\n\n  public view(round: Round): void {\n    this.router.navigateByUrl(`/game/${this.gameId}/round/${round.id}`);\n  }\n\n  public configuration(): void {\n    this.router.navigateByUrl(`/game/${this.gameId}/configuration`);\n  }\n}\n","<mat-card class=\"mdc-card card\">\n  <div class=\"mdc-card__primary-action details\" tabindex=\"0\" (click)=\"view(round)\">\n    <div class=\"flex-box-rows\">\n      <div class=\"mdc-button__label name flex-box-item\">\n        Round {{round.number}}            \n      </div>          \n    </div>   \n  </div>\n  \n  <mat-icon color=\"accent\" *ngIf=\"allTablesPointsConfirmed$ | async\" title=\"All Points Confirmed\">checkmark</mat-icon>\n  \n  <div *ngIf=\"this.isAdmin$ | async\">\n    <button mat-icon-button color=\"primary\" aria-label=\"delete round\" title=\"delete round\" (click)=\"delete(round)\">\n        <mat-icon>delete</mat-icon>\n    </button>\n  </div>    \n</mat-card>","import { Location } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { of, Subscription } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { RoundMediatorService } from 'src/app/services/round-mediator/round-mediator.service';\nimport { Round } from 'src/app/services/round/round';\nimport { RoundService } from 'src/app/services/round/round.service';\nimport { TableService } from 'src/app/services/table/table.service';\nimport { Table } from '../../table/table';\n\n@Component({\n  selector: 'app-round-detail',\n  templateUrl: './round-detail.component.html',\n  styleUrls: ['./round-detail.component.css']\n})\nexport class RoundDetailComponent implements OnInit, OnDestroy {\n  gameId?: string;\n  roundId?: string;\n  round?: Round;\n  tables?: Table[];\n  unConfirmedTables$ = of([]);\n  allTablesPointsConfirmed$ = of(false);\n  sectionName: string;\n  isAdmin$ = of(false);\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private roundService: RoundService,\n    private tableService: TableService,\n    private roundMediatorService: RoundMediatorService,\n    private gameService: GameService,\n    private location: Location) { }\n\n  ngOnInit(): void {\n    this.gameId = this.route.snapshot.paramMap.get('gameId');\n    this.roundId = this.route.snapshot.paramMap.get('roundId');\n\n    this.getRound();\n    this.getTables();\n\n    this.allTablesPointsConfirmed$ = this.roundMediatorService.allTablesConfirmed(this.roundId, this.gameId);\n    this.unConfirmedTables$ = this.roundMediatorService.unconfirmedTables(this.roundId, this.gameId);\n\n    this.isAdmin$ = this.gameService.isCurrentUserAdmin(this.gameId);\n\n    return;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  endRound(): void {\n    this.subscriptions.push(\n      this.allTablesPointsConfirmed$.pipe(\n        take(1),\n        switchMap((confirmed) => {\n          if (confirmed) {\n            return this.roundMediatorService.updatePlayerPoints(this.roundId, this.gameId, this.round.number);\n          }\n        })\n      ).subscribe({\n        next: () => {\n            this.roundMediatorService.updateByePlayerPoints(this.roundId, this.gameId).subscribe({\n              complete: () => {\n                // TODO: add points calculated property?\n                this.router.navigateByUrl(`/game/${this.gameId}/dashboard`);\n              }\n            });\n        }\n      })\n    );\n  }\n\n  getRound(): void {\n    this.subscriptions.push(\n      this.roundService.getRound(this.roundId, this.gameId).subscribe({\n        next: (round) => {\n          this.round = round;\n          this.sectionName = `Round ${round.number}`;\n        }\n      })\n    );\n  }\n\n  getTables(): void {\n    this.subscriptions.push(\n      this.tableService.getTablesForRound(this.roundId, this.gameId).subscribe({\n        next: (tables) => {\n          if (tables) {\n            this.tables = tables;\n          }\n        }\n      })\n    );\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div *ngIf=\"round\">\n\n  <app-section-header [sectionName]=\"sectionName\"></app-section-header>\n    \n  <div class=\"content flex-box-columns mat-typography\">\n    <div class=\"flex-box-item\">\n      <span class=\"mat-h3\">Round Id: </span>\n      <span>{{round.id}}</span>\n    </div>\n\n    <div class=\"flex-box-item\">\n      <span class=\"mat-h3\">Byes ({{round.byes.length}}): </span>\n      <span *ngFor=\"let player of round.byes; let i = index\">\n        <span *ngIf=\"i > 0\">, </span>\n        <span>{{player.displayName}}</span>              \n      </span>\n    </div>\n\n    <div class=\"flex-box-item\">\n      <span class=\"mat-h3\">Tables with unconfirmed Points ({{ (unConfirmedTables$ | async)?.length ?? 0 }}): </span>\n      <span *ngFor=\"let table of (unConfirmedTables$ | async); let i = index\">\n        <span *ngIf=\"i > 0\">, </span>\n        <span>Table {{ table.number }}</span>\n      </span>\n      <span *ngIf=\"allTablesPointsConfirmed$ | async\">\n        All Table's Points Confirmed\n      </span>         \n    </div>\n    \n    <div class=\"flex-box-item\" *ngIf=\"isAdmin$ | async\">\n      <button mat-raised-button class=\"full-width\" color=\"primary\" aria-label=\"Back\" title=\"Back\" (click)=\"endRound()\" [disabled]=\"(allTablesPointsConfirmed$ | async) === false\">\n        End Round\n      </button>\n    </div>\n\n  </div>\n\n  <app-tables [tables]=\"tables\" *ngIf=\"tables\"></app-tables>    \n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { combineLatest, EMPTY, of, Subscription } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { Game } from 'src/app/services/game/game';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { GamePlayerService } from 'src/app/services/gamePlayer/game-player.service';\nimport { RoundMediatorService } from 'src/app/services/round-mediator/round-mediator.service';\nimport { Round } from 'src/app/services/round/round';\nimport { RoundService } from 'src/app/services/round/round.service';\nimport { ConfirmDialogComponent } from '../../confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-rounds',\n  templateUrl: './rounds.component.html',\n  styleUrls: ['./rounds.component.css']\n})\nexport class RoundsComponent implements OnInit, OnDestroy {\n  @Input() game: Game;\n  rounds: Round[] = [];\n  isUserAdmin = false;\n  allTablesPointsConfirmed$ = of(false);\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private roundService: RoundService,\n    private roundMediatorService: RoundMediatorService,\n    private gameService: GameService,\n    private router: Router,\n    private dialog: MatDialog,\n    private playerService: GamePlayerService) { }\n\n  ngOnInit(): void {\n    this.getRounds();\n\n    this.subscriptions.push(\n      this.gameService.isCurrentUserAdmin(this.game.id).subscribe({\n        next: (isAdmin) => {\n          this.isUserAdmin = isAdmin;\n        }\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  getRounds(): void {\n    this.subscriptions.push(\n      this.roundService.roundsForGame(this.game.id).subscribe({\n        next: (rounds) => {\n          if (rounds.length === 0) {\n            this.rounds = [];\n            return;\n          }\n          this.rounds = rounds.sort((a, b) => a.number - b.number);\n          const lastRound = this.rounds[this.rounds.length - 1];\n          this.allTablesPointsConfirmed$ = this.roundMediatorService.allTablesConfirmed(lastRound.id, this.game.id);\n        }\n      })\n    );\n  }\n\n  startRound(roundNumber: number): void {\n    this.subscriptions.push(\n      combineLatest([\n        this.allTablesPointsConfirmed$,\n        this.playerService.playersForGame(this.game.id).pipe(take(1))\n      ]).pipe(\n        switchMap(([allPointsConfirmed, players]) => {\n          if (roundNumber > 1 && !allPointsConfirmed) {\n            this.showErrorDialog('Start Round', `Please confirm all points for round ${roundNumber - 1} first`);\n            return EMPTY;\n          }\n\n          if (players && players.length < 4) {\n            this.showErrorDialog('Start Round', 'You need to have at least 4 players to start a round');\n            return EMPTY;\n          }\n\n          if (roundNumber <= this.game.numberOfRounds) {\n              return this.roundMediatorService.createRound(this.game.id);\n          }\n        }\n      )).subscribe({\n        next: (tables) => {\n          if (tables) {\n            const lastRoundId = this.rounds[this.rounds.length - 1].id;\n            this.router.navigateByUrl(`/game/${this.game.id}/round/${lastRoundId}`);\n          }\n        }\n      })\n    );\n  }\n\n  configuration(): void {\n    this.router.navigateByUrl(`/game/${this.game.id}/configuration`);\n  }\n\n  showErrorDialog(title: string, message: string): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      panelClass: 'dialog-container',\n      data: {\n        title,\n        message,\n        showActionButtons: false\n      }\n    });\n\n    this.subscriptions.push(\n      dialogRef.afterClosed().subscribe()\n    );\n  }\n}\n","<div class=\"flex-box-rows\">\n    <mat-toolbar color=\"accent\">\n        <span class=\"flex-box-item\">Rounds</span>\n        <div *ngIf=\"isUserAdmin && (game.numberOfRounds > 0 && rounds.length === 0 || (rounds.length < game.numberOfRounds))\">\n            <button mat-raised-button color=\"primary\" aria-label=\"start round\" title=\"start round\" (click)=\"startRound(rounds.length + 1)\">\n                Start Round {{rounds.length + 1}}\n            </button>\n        </div>\n    </mat-toolbar>\n</div>\n\n<div *ngIf=\"rounds.length === 0\">\n    There are no rounds.\n</div>\n\n<div *ngIf=\"(!game.numberOfRounds || game.numberOfRounds === 0) && isUserAdmin\">\n    Number of rounds is set to 0. Edit the game configuration.\n    <button mat-raised-button color=\"primary\" aria-label=\"Configuration\" title=\"Configuration\" (click)=\"configuration()\">\n        Configuration\n    </button>\n</div>\n\n<div *ngIf=\"rounds.length > 0\" class=\"rounds\">\n  <app-round-card *ngFor=\"let round of rounds\" [round]=\"round\" [gameId]=\"game.id\"></app-round-card>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-section-header',\n  templateUrl: './section-header.component.html',\n  styleUrls: ['./section-header.component.css']\n})\nexport class SectionHeaderComponent {\n  @Input() sectionName: string;\n\n  constructor(private location: Location) { }\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n","<div class=\"flex-box-rows\">\n    <mat-toolbar color=\"accent\">\n        <div class=\"flex-box-item\">\n            <span>{{ sectionName }}</span>\n        </div>\n        <div>\n            <button mat-raised-button color=\"primary\" aria-label=\"Back\" title=\"Back\" (click)=\"goBack()\">\n                Back\n            </button>\n        </div>\n    </mat-toolbar>  \n</div>","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from 'src/app/services/message/message.service';\n\n@Component({\n  selector: 'app-system-messages',\n  templateUrl: './system-messages.component.html',\n  styleUrls: ['./system-messages.component.css']\n})\nexport class SystemMessagesComponent {\n\n  constructor(public messageService: MessageService) { }\n}\n","<div *ngIf=\"messageService.messages.length\">\n\n    <h2>Messages</h2>\n    <button type=\"button\" class=\"clear\"\n            (click)=\"messageService.clear()\">Clear messages</button>\n    <div *ngFor='let message of messageService.messages'> {{message}} </div>\n  \n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { RoundMediatorService } from 'src/app/services/round-mediator/round-mediator.service';\nimport { Round } from 'src/app/services/round/round';\nimport { RoundService } from 'src/app/services/round/round.service';\nimport { TableService } from 'src/app/services/table/table.service';\nimport { TeamService } from 'src/app/services/team/team.service';\nimport { TeamPlayer } from '../../team-player/team-player';\nimport { Team } from '../../team/team';\nimport { Table } from './../table';\n\n@Component({\n  selector: 'app-table-detail',\n  templateUrl: './table-detail.component.html',\n  styleUrls: ['./table-detail.component.css']\n})\nexport class TableDetailComponent implements OnInit, OnDestroy {\n  @Input() table: Table;\n  teams: Team[];\n  teamScore: number;\n  gameId: string;\n  roundId: string;\n  pointsConfirmed = false;\n  currentTeamPlayer?: TeamPlayer;\n  isDisabled = false;\n  subscriptions: Subscription[] = [];\n  isCurrentUserAdmin = false;\n\n  constructor(\n    private authService: AuthService,\n    private gameService: GameService,\n    private route: ActivatedRoute,\n    private teamService: TeamService,\n    private tableService: TableService,\n    private roundMediatorService: RoundMediatorService) { }\n\n  ngOnInit(): void {\n    this.gameId = this.route.snapshot.paramMap.get('gameId');\n    this.roundId = this.route.snapshot.paramMap.get('roundId');\n\n    this.getTeams();\n\n    this.subscriptions.push(\n      combineLatest([\n        this.gameService.isCurrentUserAdmin(this.gameId),\n        this.roundMediatorService.allTablesConfirmed(this.roundId, this.gameId)\n      ]).subscribe({\n        next: ([isAdmin, confirmed]) => {\n          this.isCurrentUserAdmin = isAdmin;\n          if (!isAdmin && confirmed) {\n            this.isDisabled = true;\n          } else {\n            this.isDisabled = false;\n          }\n        }\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  getTeams(): void {\n    const currentUser = this.authService.getCurrentUser();\n\n    if (!currentUser) { return; }\n\n    this.subscriptions.push(\n      combineLatest([\n        this.gameService.isUserAdmin(currentUser.uid, this.gameId),\n        this.teamService.getTeamsForTable(this.table.id, this.roundId, this.gameId)\n      ]).subscribe({\n        next: ([isAdmin, updatedTeams]) => {\n          if (updatedTeams) {\n\n            // if teams is already defined, then update local data\n            if (this.teams) {\n              updatedTeams.forEach((updatedTeam) => {\n                const existingTeam = this.teams.find((et) => et.id === updatedTeam.id);\n                if (existingTeam) {\n                  existingTeam.points = updatedTeam.points;\n                  existingTeam.teamPlayers = updatedTeam.teamPlayers;\n                }\n              });\n            } else {\n              this.teams = updatedTeams;\n            }\n\n            updatedTeams.forEach((team) => {\n              const updatedCurrentPlayer = team.teamPlayers.find((teamPlayer) => teamPlayer.player.uid === currentUser.uid);\n              if (updatedCurrentPlayer) {\n                this.currentTeamPlayer = updatedCurrentPlayer;\n              }\n            });\n\n            this.checkPointsConfirmed(isAdmin);\n          }\n        }\n      })\n    );\n  }\n\n  toggleConfirmPoints(confirm: boolean): void {\n    const currentUser = this.authService.getCurrentUser();\n\n    this.subscriptions.push(\n      this.gameService.isUserAdmin(currentUser.uid, this.gameId).pipe(take(1)).subscribe({\n        next: (isAdmin) => {\n\n          // if current user is admin, then set all team players points confirmed\n          if (isAdmin) {\n            this.teams.forEach((team) => {\n              team.teamPlayers.forEach((teamPlayer) => {\n                teamPlayer.isPointsConfirmed = confirm;\n              });\n              this.teamService.updateTeam(team, this.table.id, this.roundId, this.gameId).subscribe({\n                next: () => {\n                  this.checkPointsConfirmed(isAdmin);\n                }\n              });\n            });\n\n          } else if (this.currentTeamPlayer) {\n            // else if user is a team player, then only set their points confirmed value\n\n            // find the team to update\n            this.teams.forEach((team) => {\n              const teamPlayer = team.teamPlayers.find((tp) => tp.player.uid === currentUser.uid);\n              // if current user is on this team, then update it\n              if (teamPlayer) {\n                team.teamPlayers.forEach((tp) => {\n                  tp.isPointsConfirmed = confirm;\n                });\n\n                this.teamService.updateTeam(team, this.table.id, this.roundId, this.gameId).subscribe({\n                  next: () => {\n                    this.checkPointsConfirmed(isAdmin);\n                  }\n                });\n              }\n            });\n          }\n        }\n      })\n    );\n  }\n\n  private checkPointsConfirmed(isAdmin: boolean): void {\n    let confirmCounter = 0;\n\n    this.teams.forEach((team) => {\n      team.teamPlayers.forEach((teamPlayer) => {\n        if (teamPlayer.isPointsConfirmed) {\n          confirmCounter++;\n        }\n      });\n    });\n\n    const allPlayersConfirmed = confirmCounter === 4;\n    if (isAdmin) {\n      this.pointsConfirmed = allPlayersConfirmed;\n    } else {\n      this.pointsConfirmed = confirmCounter > 0;\n    }\n\n    if (this.table.pointsConfirmed !== allPlayersConfirmed) {\n      this.table.pointsConfirmed = allPlayersConfirmed;\n      this.tableService.updateTable(this.table, this.roundId, this.gameId);\n    }\n  }\n}\n","<mat-toolbar color=\"secondary\" class=\"flex-box-rows\">\n    <div class=\"flex-box-item\">Table {{table.number}}</div>\n    <div *ngIf=\"isCurrentUserAdmin\">\n        <div class=\"flex-box-item\">\n            <button mat-raised-button color=\"primary\" [disabled]=\"isDisabled\" (click)=\"toggleConfirmPoints(true)\" *ngIf=\"!pointsConfirmed\">\n                <mat-icon>check</mat-icon>\n                Confirm Points\n            </button>\n\n            <button mat-raised-button color=\"primary\" [disabled]=\"isDisabled\" (click)=\"toggleConfirmPoints(false)\" *ngIf=\"pointsConfirmed\">\n                <mat-icon>cancel</mat-icon>\n                Change Points\n            </button>\n        </div>    \n    </div>\n</mat-toolbar>\n\n<div [ngClass.gt-xs]=\"'flex-box-rows'\"\n    [ngClass.lt-sm]=\"'flex-box-columns'\">\n    <app-team [team]=\"team\" [table]=\"table\" *ngFor=\"let team of teams\" class=\"flex-box-item\"></app-team>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'firebase/auth';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { GamePlayerService } from 'src/app/services/gamePlayer/game-player.service';\nimport { TableService } from 'src/app/services/table/table.service';\nimport { Table } from '../../table';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.css']\n})\nexport class TablesComponent implements OnInit, OnDestroy {\n  @Input() tables: Table[];\n  public filteredTables: Table[];\n  public isDataFiltered = false;\n  public isUserPlayer = true;\n  private filterString: string | undefined;\n  private gameId: string;\n  private roundId: string;\n  private currentUser?: User;\n\n  constructor(\n    private tableService: TableService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private gamePlayerService: GamePlayerService) { }\n    private subscriptions: Subscription[] = [];\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getCurrentUser();\n    this.gameId = this.route.snapshot.paramMap.get('gameId');\n    this.roundId = this.route.snapshot.paramMap.get('roundId');\n    this.filteredTables = this.tables.sort((a, b) => a.number - b.number);\n\n    this.checkCurrentUserIsPlayer();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  public filterTables(): void {\n    this.isDataFiltered = !this.isDataFiltered;\n\n    if (this.currentUser && this.isDataFiltered) {\n      this.subscriptions.push(\n        this.tableService.getTableForPlayer(this.currentUser.uid, this.roundId, this.gameId).pipe(take(1)).subscribe({\n          next: (playerTable) => {\n            if (playerTable) {\n              this.filterString = playerTable.id;\n            } else {\n              this.filterString = undefined;\n            }\n\n            this.filteredTables = this.filterString ? this.tables.filter((table) => table.id === this.filterString) : this.tables;\n          }\n        })\n      );\n    } else {\n      this.filteredTables = this.tables;\n    }\n\n    this.filteredTables.sort((a, b) => a.number - b.number);\n  }\n\n  private checkCurrentUserIsPlayer(): void {\n    if (!this.currentUser) {\n      this.isUserPlayer = false;\n      return;\n    }\n\n    this.subscriptions.push(\n      this.gamePlayerService.getPlayer(this.currentUser.uid, this.gameId).subscribe({\n        next: (player) => {\n          if (player) {\n            this.isUserPlayer = true;\n            this.filterTables();\n          } else {\n            this.isUserPlayer = false;\n          }\n        }\n      })\n    );\n  }\n}\n","<mat-toolbar color=\"accent\" class=\"flex-box-rows\">\n    <div class=\"flex-box-item flex-box-item-large\">Tables</div>\n    <div *ngIf=\"isUserPlayer\">\n      <div class=\"flex-box-item\">\n         <button mat-raised-button color=\"primary\" (click)=\"filterTables()\" *ngIf=\"isDataFiltered\">Show All Tables</button>\n      </div>\n      <div class=\"flex-box-item\">\n        <button mat-raised-button color=\"primary\" (click)=\"filterTables()\" *ngIf=\"!isDataFiltered\">Show My Table</button>\n      </div>\n    </div>\n</mat-toolbar>\n\n<app-table-detail [table]=\"table\" *ngFor=\"let table of filteredTables\"></app-table-detail>","import { Component, Input, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { TeamPlayer } from './team-player';\n\n@Component({\n  selector: 'app-team-player',\n  templateUrl: './team-player.component.html',\n  styleUrls: ['./team-player.component.css']\n})\nexport class TeamPlayerComponent implements OnInit {\n  @Input() teamPlayer: TeamPlayer;\n  isCurrentUserTeamPlayer = false;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    const currentUser = this.authService.getCurrentUser();\n\n    if (currentUser && this.teamPlayer.player.uid === currentUser.uid) {\n      this.isCurrentUserTeamPlayer = true;\n    } else {\n      this.isCurrentUserTeamPlayer = false;\n    }\n  }\n}\n","<mat-card class=\"mdc-card team-player-card\">\n    <div class=\"flex-box-item\">\n        {{teamPlayer.player.displayName}}\n        <span *ngIf=\"isCurrentUserTeamPlayer\"> (you)</span>\n    </div>\n    <mat-icon *ngIf=\"teamPlayer.isPointsConfirmed\">checkmark</mat-icon>\n</mat-card>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { GameService } from 'src/app/services/game/game.service';\nimport { Team } from './team';\nimport { getAuth } from \"firebase/auth\";\nimport { ActivatedRoute } from '@angular/router';\nimport { debounceTime, distinctUntilChanged, take } from 'rxjs/operators';\nimport { TeamService } from 'src/app/services/team/team.service';\nimport { Table } from '../table/table';\nimport { FormControl } from '@angular/forms';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { RoundMediatorService } from 'src/app/services/round-mediator/round-mediator.service';\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\n\nexport class TeamComponent implements OnInit, OnDestroy {\n  @Input() team: Team;\n  @Input() table: Table;\n\n  teamPointsFormControl = new FormControl({ value: 0, disabled: false});\n  gameId: string;\n  roundId: string;\n  auth = getAuth();\n  pointsConfirmed = false;\n  isEditable = true;\n  subscriptions: Subscription[] = [];\n  teamPlayers = [];\n\n  constructor(\n    private gameService: GameService,\n    private route: ActivatedRoute,\n    private teamService: TeamService,\n    private roundMediatorService: RoundMediatorService) { }\n\n  ngOnInit(): void {\n    this.gameId = this.route.snapshot.paramMap.get('gameId');\n    this.roundId = this.route.snapshot.paramMap.get('roundId');\n    // this.canEditPoints();\n\n    this.subscriptions.push(\n      this.teamPointsFormControl.valueChanges.pipe(\n        distinctUntilChanged(),\n        debounceTime(1000),\n      ).subscribe({\n        next: (points) => {\n          this.pointsChanged(points);\n        }\n      }),\n      this.teamService.getTeam(this.team.id, this.table.id, this.roundId, this.gameId).subscribe({\n        next: (currentTeam) => {\n          if (currentTeam) {\n            this.team = currentTeam;\n            this.teamPointsFormControl.setValue(currentTeam.points);\n\n            this.pointsConfirmed = false;\n            this.teamPlayers = currentTeam.teamPlayers;\n\n            currentTeam.teamPlayers.forEach((teamPlayer) => {\n              if (teamPlayer.isPointsConfirmed) {\n                this.pointsConfirmed = true;\n              }\n            });\n\n            this.canEditPoints();\n          }\n        }\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  pointsChanged(points: number): void {\n    if (this.team.points === points) { return; }\n\n    console.log('pointsChanged: ' + points);\n\n    this.team.points = points;\n    this.subscriptions.push(\n      this.teamService.updateTeam(this.team, this.table.id, this.roundId, this.gameId).subscribe()\n    );\n  }\n\n  private canEditPoints(): void {\n    const currentUser = this.auth.currentUser;\n\n    if (!currentUser) {\n      this.isEditable = false;\n      this.teamPointsFormControl.disable();\n      return;\n    }\n\n    this.subscriptions.push(\n      combineLatest([\n        this.roundMediatorService.allTablesConfirmed(this.roundId, this.gameId),\n        this.gameService.isUserAdmin(currentUser.uid, this.gameId)\n      ])\n      .pipe(take(1)).subscribe({\n        next: ([allTablesConfirmed, isAdmin]) => {\n          const isTeamPlayer = this.team.teamPlayers.find((teamPlayer) => teamPlayer.player.uid === currentUser.uid);\n\n          if (allTablesConfirmed) {\n            this.isEditable = false;\n            this.teamPointsFormControl.disable();\n          }\n          else if ((isAdmin || isTeamPlayer) && !this.pointsConfirmed) {\n            this.isEditable = true;\n            this.teamPointsFormControl.enable();\n          } else {\n            this.isEditable = false;\n            this.teamPointsFormControl.disable();\n          }\n        }\n      })\n    );\n  }\n}\n","<mat-card class=\"mdc-card card team-card\">\n    <div>\n        <div>Team:</div>\n        <app-team-player *ngFor=\"let teamPlayer of teamPlayers\" [teamPlayer]=\"teamPlayer\"></app-team-player>\n    </div>\n    <div>\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\n            <mat-label>Points</mat-label>\n            <input matInput id=\"teamPoints\" placeholder=\"0\" type=\"number\" pattern=\"\\d*\" onclick=\"this.select()\" [formControl]=\"teamPointsFormControl\">\n          </mat-form-field>\n    </div>          \n</mat-card>","import {Component, Inject} from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n/**\n * @title Dialog Overview\n */\n@Component({\n  selector: 'app-login-dialog',\n  styleUrls: ['./login-dialog-component.scss'],\n  templateUrl: 'login-dialog-component.html',\n})\nexport class LoginDialogComponent {\n    constructor(\n      public dialogRef: MatDialogRef<LoginDialogComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    ) {}\n\n    onNoClick(): void {\n      this.dialogRef.close();\n    }\n\n    close(): void {\n      this.dialogRef.close();\n    }\n}\n","<mat-toolbar color=\"primary\" class=\"header\">\n    <div class=\"flex-box-item\">\n        <h1 mat-dialog-title>Login</h1>\n    </div>\n    <div>\n        <button mat-icon-button aria-label=\"close\" (click)=\"close()\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n</mat-toolbar>\n\n<app-login></app-login>","<div id=\"firebaseui-auth-container\" class=\"auth-container\"></div>\n\n<div class=\"content\" *ngIf=\"isLoggedIn$ | async\">\n    <h1 mat-dialog-title>You are now logged in</h1>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoggedIn$: Observable<boolean>;\n  subscription?: Subscription;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn$ = this.authService.isLoggedIn$;\n\n    this.subscription = this.isLoggedIn$.subscribe({\n      next: (loggedIn) => {\n        if (!loggedIn) {\n          this.authService.showLogin('#firebaseui-auth-container');\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { User } from \"firebase/auth\";\nimport { Subscription } from 'rxjs';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit, OnDestroy {\n  displayName: string;\n  email: string;\n  currentUser: User;\n  subscription?: Subscription;\n\n  constructor(private authService: AuthService, private location: Location) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getCurrentUser();\n\n    if (this.currentUser) {\n      this.displayName = this.currentUser.displayName;\n      this.email = this.currentUser.email;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  save(): void {\n    // this.gamePlayerService.updatePlayer()\n  }\n\n  back(): void {\n    this.location.back();\n  }\n\n}\n","<div>\n    Display Name: {{displayName}}\n    <!-- <label class=\"mdc-text-field mdc-text-field--outlined\">\n        <span class=\"mdc-notched-outline\">\n            <span class=\"mdc-notched-outline__leading\"></span>\n            <span class=\"mdc-notched-outline__notch\">\n            <span class=\"mdc-floating-label\" id=\"my-label-id\" *ngIf=\"!displayName\">Your Name</span>\n            </span>\n            <span class=\"mdc-notched-outline__trailing\"></span>\n        </span>\n        <input type=\"text\" class=\"mdc-text-field__input\" aria-labelledby=\"my-label-id\" [(ngModel)]=\"displayName\">\n    </label> -->\n</div>\n<div>\n    Email: {{email}}\n    <!-- <label class=\"mdc-text-field mdc-text-field--outlined\">\n        <span class=\"mdc-notched-outline\">\n            <span class=\"mdc-notched-outline__leading\"></span>\n            <span class=\"mdc-notched-outline__notch\">\n            <span class=\"mdc-floating-label\" id=\"my-label-id\" *ngIf=\"!email\">Your Name</span>\n            </span>\n            <span class=\"mdc-notched-outline__trailing\"></span>\n        </span>\n        <input type=\"text\" class=\"mdc-text-field__input\" aria-labelledby=\"my-label-id\" [(ngModel)]=\"email\" disabled=\"true\">\n    </label> -->\n</div>\n<div class=\"flex-box-rows\">\n    <button class=\"mdc-button mdc-button--raised\" (click)=\"back()\">\n        <div class=\"mdc-button__ripple\"></div>\n        <!-- <mat-icon>save</mat-icon>     -->\n        <span class=\"mdc-button__label\">        \n        <span class=\"mdc-button__label\">Back</span>\n        </span>\n    </button>\n    <!-- <button class=\"mdc-button mdc-button--raised\" (click)=\"save()\">\n        <div class=\"mdc-button__ripple\"></div>        \n        <span class=\"mdc-button__label\">        \n        <span class=\"mdc-button__label\">Save</span>\n        </span>\n    </button> -->\n</div>","import { Injectable } from '@angular/core';\nimport firebase from 'firebase/compat/app';\nimport * as firebaseui from 'firebaseui';\nimport 'firebase/auth';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { initializeApp } from 'firebase-admin/app';\nimport { getAuth, User } from 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  currentUser$: Observable<firebase.User>;\n\n  private isLoggedInSubject = new BehaviorSubject<boolean>(false);\n  public readonly isLoggedIn$ = this.isLoggedInSubject.asObservable();\n\n  private ui: firebaseui.auth.AuthUI;\n\n  constructor(private afAuth: AngularFireAuth) {\n    firebase.initializeApp(environment.firebase);\n    this.ui = new firebaseui.auth.AuthUI(firebase.auth());\n\n    firebase.auth().onAuthStateChanged((user) => {\n      this.currentUser$ = of(user);\n      if (user) {\n        this.isLoggedInSubject.next(true);\n      } else {\n        this.isLoggedInSubject.next(false);\n      }\n    });\n  }\n\n  getCurrentUser(): User {\n    return firebase.auth().currentUser;\n  }\n\n  showLogin(container: string): void {\n    const uiConfig = {\n      signInOptions: [\n        // firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n        {\n          provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n          // signInMethod: firebase.auth.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD\n        }\n      ],\n      callbacks: {\n        signInSuccessWithAuthResult: this.onLoginSuccessful.bind(this)\n      }\n    };\n\n    this.ui.start(container, uiConfig);\n  }\n\n  onLoginSuccessful(): void {\n\n  }\n}\n","export enum Collection {\n    Games = 'games',\n    GamePlayers = 'gamePlayers',\n    Admins = 'admins',\n    Rounds = 'rounds',\n    Tables = 'tables',\n    Teams = 'team'\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { EMPTY, from, Observable, of } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { MessageService } from '../message/message.service';\nimport { Game } from './game';\nimport { Collection } from '../collection';\nimport { getAuth } from 'firebase/auth';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n  public games$: Observable<Game[]>;\n\n  constructor(private messageService: MessageService, private store: AngularFirestore) {\n    this.games$ = this.store.collection(Collection.Games).valueChanges({ idField: 'id' }) as Observable<Game[]>;\n  }\n\n  getGame(id: string): Observable<Game | undefined> {\n    return this.games$.pipe(\n      map((games) => {\n        return games.find((game) => game.id === id);\n      })\n    );\n  }\n\n  addGame(game: Game, userId: string): Observable<Game | void> {\n    game.adminIds = [];\n    game.byePool = [];\n\n    return from(this.store.collection<Game>(Collection.Games)\n      .add(game).then(\n        (newGame) => {\n          game.id = newGame.id;\n          this.log(`added game w/ id=${newGame.id}`);\n          this.addAdmin(newGame.id, userId);\n          return game;\n        },\n        err => this.log(`addGame ${err}`)\n      )\n    );\n  }\n\n  updateGame(game: Game): Observable<Game | void> {\n    return from(this.store.collection(Collection.Games).doc<Game>(game.id).update(game).then(\n      () => {\n        this.log(`updated game w/ id=${game.id}`);\n        return game;\n      },\n      err => this.log(`updateGame ${err}`)\n    ));\n  }\n\n  deleteGame(id: string): void {\n    this.store.collection(Collection.Games).doc<Game>(id).delete()\n      .then(\n        () => {\n          this.log(`deleted game w/ id=${id}`);\n        },\n        err => this.log(`deleteGame ${err}`)\n      );\n  }\n\n  addAdmin(gameId: string, userId: string): void {\n    this.getGame(gameId).pipe(\n      take(1)\n    ).subscribe({\n      next: (game) => {\n        if (game) {\n          game.adminIds.push(userId);\n          this.log(`adding game admin w/ id=${userId}`);\n          this.updateGame(game);\n        }\n      }\n    });\n  }\n\n  deleteAdmin(gameId: string, userId: string): void {\n    this.getGame(gameId).pipe(\n      take(1)\n    ).subscribe({\n      next: (game) => {\n        if (game) {\n          const filteredAdminIds = game.adminIds.filter((adminId) => adminId !== userId);\n          game.adminIds = filteredAdminIds;\n          this.log(`deleteAdmin w/ id=${userId}`);\n          this.updateGame(game);\n        }\n      }\n    });\n  }\n\n  getAdmins(gameId: string): Observable<string[]> {\n    return this.getGame(gameId).pipe(\n      take(1)\n    ).pipe(\n      map((game) => {\n        return game?.adminIds ?? [];\n      })\n    );\n  }\n\n  isCurrentUserAdmin(gameId: string): Observable<boolean> {\n    return this.getGame(gameId).pipe(\n      take(1)\n    ).pipe(\n      map((game) => {\n        if (!game) {\n          return false;\n        }\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n          return false;\n        }\n        return !!game.adminIds.find((adminId) => adminId === currentUser.uid);\n      })\n    );\n  }\n\n  isUserAdmin(playerId: string, gameId: string): Observable<boolean> {\n    return this.getGame(gameId).pipe(\n      take(1)\n    ).pipe(\n      map((game) => {\n          return !!game.adminIds.find((adminId) => adminId === playerId);\n      })\n    );\n  }\n\n  private log(message: string): void {\n    this.messageService.add(`GameService: ${message}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EMPTY, from, Observable, of } from 'rxjs';\nimport { GamePlayer } from 'src/app/components/player/game-player';\nimport { MessageService } from '../message/message.service';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Collection } from '../collection';\nimport { Game } from '../game/game';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Table } from 'src/app/components/table/table';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamePlayerService {\n\n  constructor(private messageService: MessageService, private store: AngularFirestore) { }\n\n  playersForGame(gameId: string): Observable<GamePlayer[]> {\n    return this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.GamePlayers)\n      .valueChanges({ idField: 'uid' }) as Observable<GamePlayer[]>;\n  }\n\n  getPlayer(playerId: string, gameId: string): Observable<GamePlayer | undefined> {\n    return this.playersForGame(gameId).pipe(\n      map((players) => players.find((player) => player.uid === playerId))\n    );\n  }\n\n  addPlayer(player: GamePlayer, gameId: string): void {\n    // if player already has an ID, then use set instead of add\n    if (player.uid) {\n      this.store.collection(Collection.Games).doc(gameId).collection(Collection.GamePlayers).doc(player.uid).set(player).then(\n        () => {\n          this.log(`addPlayerToGame w/ id=${gameId} ${player.displayName}`);\n        },\n        err => this.handleError<Game>('addPlayerToGame')\n      );\n    } else {\n      this.store.collection(Collection.Games).doc(gameId).collection(Collection.GamePlayers).add(player).then(\n        () => {\n          this.log(`addPlayerToGame w/ id=${gameId} ${player.displayName}`);\n        },\n        err => this.handleError<Game>('addPlayerToGame')\n      );\n    }\n\n  }\n\n  updatePlayer(player: GamePlayer, gameId: string): Observable<GamePlayer | void> {\n    return from(this.store.collection(Collection.Games).doc(gameId).collection(Collection.GamePlayers).doc(player.uid).update(player).then(\n      () => {\n        this.log(`updatePlayer id: ${player.uid} name: ${player.displayName}`);\n        return player;\n      },\n      err => this.log(`updatePlayer ${err}`)\n      ));\n  }\n\n  deletePlayer(playerId: string, gameId: string): void {\n    this.store.collection(Collection.Games)\n    .doc(gameId)\n    .collection(Collection.GamePlayers)\n    .doc(playerId).delete().then(\n        () => {\n          this.log(`deleted player w/ id=${playerId}`);\n        },\n        err => this.handleError<GamePlayer>('deletePlayer')\n      );\n  }\n\n  /* GET players whose name contains search term */\n  searchPlayers(term: string): Observable<GamePlayer[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    // return this.http.get<Player[]>(`${this.playersUrl}/?name=${term}`).pipe(\n    //   tap(x => x.length ?\n    //     this.log(`found Players matching \"${term}\"`) :\n    //     this.log(`no Players matching \"${term}\"`)),\n    //   catchError(this.handleError<Player[]>('searchPlayers', []))\n    // );\n  }\n\n  private log(message: string): void {\n    this.messageService.add(`PlayerService: ${message}`);\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string): void {\n    console.log(message);\n    this.messages.push(message);\n  }\n\n  clear(): void {\n    this.messages = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { combineLatest, EMPTY, forkJoin, merge, Observable, of, Subscription } from 'rxjs';\nimport { last, map, mergeMap, switchMap, take } from 'rxjs/operators';\nimport { GamePlayer } from 'src/app/components/player/game-player';\nimport { RoundPoints } from 'src/app/components/player/game-players/round-points';\nimport { Table } from 'src/app/components/table/table';\nimport { TeamPlayer } from 'src/app/components/team-player/team-player';\nimport { Team } from 'src/app/components/team/team';\nimport { Game } from '../game/game';\nimport { GameService } from '../game/game.service';\nimport { GamePlayerService } from '../gamePlayer/game-player.service';\nimport { MessageService } from '../message/message.service';\nimport { Round } from '../round/round';\nimport { RoundService } from '../round/round.service';\nimport { TableService } from '../table/table.service';\nimport { TeamService } from '../team/team.service';\nimport { TableData } from './table-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoundMediatorService {\n  private byes = [];\n\n  constructor(\n    private gameService: GameService,\n    private roundService: RoundService,\n    private gamePlayerService: GamePlayerService,\n    private messageService: MessageService,\n    private teamService: TeamService,\n    private tableService: TableService) { }\n    private subscriptions: Subscription[] = [];\n\n  allTablesConfirmed(roundId: string, gameId: string): Observable<boolean> {\n    return this.tableService.getTablesForRound(roundId, gameId).pipe(\n      map((tables) => {\n        let confirmCounter = 0;\n        tables.map((table) => {\n          if (table.pointsConfirmed) {\n            confirmCounter++;\n          }\n        });\n        const allConfirmed = confirmCounter === tables.length;\n        return allConfirmed;\n      }\n    ));\n  }\n\n  unconfirmedTables(roundId: string, gameId): Observable<Table[] | undefined> {\n    return this.tableService.getTablesForRound(roundId, gameId).pipe(\n      map((tables) => {\n        const unconfirmedTables = [];\n\n        tables.map((table) => {\n          if (!table.pointsConfirmed) {\n            unconfirmedTables.push(table);\n          }\n        });\n\n        return unconfirmedTables;\n      }\n    ));\n  }\n\n  public getTeamPlayersForRound(roundId: string, gameId: string): Observable<TeamPlayer[]> {\n    const teamPlayers$ = this.tableService.getTablesForRound(roundId, gameId).pipe(\n      mergeMap((tables) => {\n        const teamsForTables$ = tables.map((table) => this.teamService.getTeamsForTable(table.id, roundId, gameId));\n\n        const teams$ = combineLatest(teamsForTables$).pipe(\n          switchMap((arrayOfTeams) => {\n            return of(arrayOfTeams.flat());\n          })\n        );\n\n        return teams$.pipe(\n          switchMap((teams) => {\n            const teamPlayers = teams.map((team) => {\n              return team.teamPlayers.map((teamPlayer) => {\n                teamPlayer.points = team.points;\n                return teamPlayer;\n              }).flat();\n            }).flat();\n\n            return of(teamPlayers);\n          }\n        ));\n      })\n    );\n    return teamPlayers$;\n  }\n\n  public updatePlayerPoints(roundId: string, gameId: string, roundNumber: number): Observable<(void | GamePlayer)[]> {\n    const teamPlayers$ = this.getTeamPlayersForRound(roundId, gameId).pipe(take(1));\n\n    return combineLatest([\n        this.gamePlayerService.playersForGame(gameId).pipe(take(1)),\n        teamPlayers$\n      ]).pipe(\n      switchMap(([gamePlayers, teamPlayers]) => {\n        return combineLatest(\n          teamPlayers.map((teamPlayer) => {\n            const teamGamePlayer = teamPlayer.player;\n\n            if (!teamGamePlayer.pointsForRound) {\n              teamGamePlayer.pointsForRound = [];\n            }\n\n            const gamePlayer = gamePlayers.find((gp) => gp.uid === teamGamePlayer.uid);\n            let gamePlayerPointsForRound: RoundPoints | undefined;\n\n            if (gamePlayer.pointsForRound) {\n              gamePlayerPointsForRound = gamePlayer.pointsForRound.find((roundPoints) => roundPoints.roundId === roundId);  \n            }\n\n            // check game player points to see if they already have points to prevent extra call to update\n            if (gamePlayer && gamePlayerPointsForRound) {\n              if (gamePlayerPointsForRound.points === teamPlayer.points) {\n                return of(teamGamePlayer);\n              }\n              gamePlayerPointsForRound.points = teamPlayer.points;\n            } else {\n              const newRoundPoints: RoundPoints = {                \n                roundId,\n                roundNumber,                \n                points: teamPlayer.points\n              };\n              teamGamePlayer.pointsForRound.push(newRoundPoints);\n            }\n\n            return this.gamePlayerService.updatePlayer(teamGamePlayer, gameId);\n          })\n        );\n      })\n    );\n  }\n\n  public updateByePlayerPoints(roundId: string, gameId: string): Observable<never> {\n    if (!roundId) {\n      return EMPTY;\n    }\n\n    return combineLatest([\n      this.gamePlayerService.playersForGame(gameId).pipe(take(1)),\n      this.roundService.getRound(roundId, gameId).pipe(take(1))\n    ]).pipe(\n      switchMap(([gamePlayers, round]) => {\n        this.log('updateByePlayerPoints');\n\n        const byePlayers = round.byes;\n        const byePlayerIds = round.byes.map((bye) => bye.uid);\n        const roundNumber = round.number\n\n        if (byePlayerIds && byePlayerIds.length > 0) {\n          const lastRoundPlayers = gamePlayers.filter((gamePlayer) => {\n            const isByePlayer = byePlayerIds.find((byePlayerId) => byePlayerId === gamePlayer.uid);\n            return !isByePlayer;\n          });\n\n          // get sum of all points for all players in last round\n          let totalPoints = 0;\n          lastRoundPlayers.forEach((lastRoundPlayer) => {\n            if (lastRoundPlayer.pointsForRound) {\n              const lastRoundPoints = lastRoundPlayer.pointsForRound.find((pointsForRound) => pointsForRound.roundId === roundId);\n              if (lastRoundPoints) {\n                totalPoints += lastRoundPoints.points;\n              }\n            }\n          });\n\n          // get average and update the bye players with the average\n          const averagePoints = Math.round(totalPoints / lastRoundPlayers.length);\n          const newRoundPoints: RoundPoints = {\n            roundId,\n            roundNumber,\n            points: averagePoints\n          };\n\n          byePlayers.forEach((byePlayer) => {\n            const gamePlayer = gamePlayers.find((player) => player.uid === byePlayer.uid);\n            if (!gamePlayer.pointsForRound) {\n              gamePlayer.pointsForRound = [];\n            }\n            const roundPoints = gamePlayer.pointsForRound.find((pfr) => pfr.roundId === roundId);\n            // if roundPoints already exists, then update the points\n            if (roundPoints) {\n              if (roundPoints.points === averagePoints) {\n                return;\n              }\n              roundPoints.points = averagePoints;\n            } else {\n              gamePlayer.pointsForRound.push(newRoundPoints);\n            }\n            this.gamePlayerService.updatePlayer(gamePlayer, gameId).subscribe();\n          });\n        }\n\n        return EMPTY;\n      })\n    );\n  }\n\n  private selectByes(gameId: string): Observable<Game | void> {\n    this.byes = [];\n\n    // get byes from bye pool\n    return combineLatest([\n      this.gameService.getGame(gameId),\n      this.gamePlayerService.playersForGame(gameId)\n    ]).pipe(take(1),\n      switchMap(([game, players]) => {\n\n        this.log('selectByes');\n\n        const numberOfByes = players.length % 4;\n\n        // randomly select players from the bye pool\n        for (let i = 0; i < numberOfByes; i++) {\n          // if there are no byes in the pool, add all players to the pool\n          if (!game.byePool || game.byePool?.length === 0) {\n            game.byePool = [ ...players ];\n          }\n\n          const randomNumber = Math.floor(Math.random() * game.byePool.length);\n          const byePlayer = game.byePool.splice(randomNumber, 1);\n          this.byes.push(byePlayer[0]);\n        }\n\n        return this.gameService.updateGame(game);\n      }\n    ));\n  }\n\n  public deleteRound(roundId: string, gameId: string): void {\n    this.subscriptions.push(\n      this.gamePlayerService.playersForGame(gameId).pipe(take(1)).subscribe({\n        next: (gamePlayers) => {\n\n          this.log('deleteRound for roundId:' + roundId);\n\n          // delete the points for the round for each player\n          gamePlayers.forEach((gamePlayer) => {\n            if (gamePlayer.pointsForRound) {\n              const filteredRoundPoints = gamePlayer.pointsForRound.filter((round) => round.roundId !== roundId);\n              gamePlayer.pointsForRound = filteredRoundPoints;\n              this.gamePlayerService.updatePlayer(gamePlayer, gameId).subscribe();\n            }\n          });\n\n          this.roundService.deleteRound(roundId, gameId);\n        }\n      })\n    );\n  }\n\n  public createRound(gameId: string): Observable<Table[]> {\n    return this.selectByes(gameId).pipe(\n      switchMap((game) => {\n        return combineLatest([\n          this.roundService.roundsForGame(gameId),\n          this.gamePlayerService.playersForGame(gameId)\n        ]).pipe(\n          take(1),\n          switchMap(([rounds, players]) => {\n            if (!game || !rounds || !players) {\n              return EMPTY;\n            }\n\n            this.log('createRound');\n\n            let filteredPlayers = [...players];\n\n            if (this.byes.length > 0) {\n              filteredPlayers = players.filter((player) => {\n                const isByePlayer = this.byes.find((byePlayer) => byePlayer.uid === player.uid);\n                return !isByePlayer;\n              });\n            }\n\n            const tablesData = this.assignPlayersToTables(filteredPlayers);\n\n            const newRound = {\n              number: rounds.length + 1,\n              byes: this.byes\n            } as Round;\n\n            // create round\n            return this.roundService.addRound(newRound, gameId).pipe(\n              switchMap((round) => {\n                if (!round) { return EMPTY; }\n\n                return combineLatest(\n                  tablesData.map((tableData) => {\n\n                    // get all the playerIds for this table\n                    let tablePlayerIds: string[] = [];\n                    tableData.teams.map((team) => {\n                      tablePlayerIds = tablePlayerIds.concat(team.teamPlayers.map((teamPlayer) => teamPlayer.player.uid));\n                    });\n\n                    // create tables\n                    const newTable = {\n                      number: tableData.number,\n                      playerIds: tablePlayerIds\n                    } as Table;\n\n                    return this.tableService.addTable(newTable, round.id, gameId).pipe(\n                      switchMap((addedTable) => {\n                        if (!addedTable) { return EMPTY; }\n\n                        // create teams\n                        tableData.teams.forEach((team) => {\n                          this.teamService.addTeam(team, newTable.id, round.id, gameId);\n                        });\n\n                        return of(addedTable);\n                      }\n                    ));\n                  })\n                );\n              })\n            );\n          })\n        );\n      })\n    );\n  }\n\n  private assignPlayersToTables(players: GamePlayer[]): TableData[] {\n    const numberOfTables = Math.floor(players.length / 4);\n    const tables = [];\n    const teams = this.assignPlayersToTeams(players, numberOfTables * 2);\n    const unassignedTeams = teams;\n\n    for (let i = 0; i < numberOfTables; i++) {\n      const tableTeams = [];\n\n      for (let j = 0; j < 2; j++) {\n        const randomIndex = Math.floor(Math.random() * unassignedTeams.length);\n        const randomTeam = teams[randomIndex];\n        unassignedTeams.splice(randomIndex, 1);\n        tableTeams.push(randomTeam);\n      }\n\n      const newTable: TableData = {\n        teams: tableTeams,\n        number: i + 1\n      };\n\n      tables.push(newTable);\n    }\n\n    return tables;\n  }\n\n  private assignPlayersToTeams(players: GamePlayer[], numberOfTeams: number): Team[] {\n    const teams = [];\n\n    for (let i = 0; i < numberOfTeams; i++) {\n      const teamPlayers = [];\n\n      for (let j = 0; j < 2; j++) {\n        const randomIndex = Math.floor(Math.random() * players.length);\n        const teamPlayer = {\n          player: players[randomIndex]\n        };\n        players.splice(randomIndex, 1);\n        teamPlayers.push(teamPlayer);\n      }\n\n      const newTeam = {\n        teamPlayers,\n        points: 0\n      };\n\n      teams.push(newTeam);\n    }\n\n    return teams;\n  }\n\n  private log(message: string): void {\n    this.messageService.add(`RoundMediatorService: ${message}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { combineLatest, from, Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Collection } from '../collection';\nimport { MessageService } from '../message/message.service';\nimport { Round } from './round';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoundService {\n\n  constructor(private messageService: MessageService, private store: AngularFirestore) { }\n\n  roundsForGame(gameId: string): Observable<Round[]> {\n    return this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .valueChanges({ idField: 'id' }) as Observable<Round[]>;\n  }\n\n  getRound(roundId: string, gameId: string): Observable<Round | undefined> {\n    return this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .doc(roundId)\n      .valueChanges({ idField: 'id' }) as Observable<Round>;\n  }\n\n  addRound(round: Round, gameId: string): Observable<Round | void> {\n    return from(this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .add(round).then(\n        (docRef) => {\n          this.log(`add round to game w/ id=${gameId} ${docRef.id}`);\n          round.id = docRef.id;\n          return round;\n        },\n        err =>  this.log(`Error addRound w/ id=${gameId}`)\n      )\n    );\n  }\n\n  updateRound(round: Round, gameId: string): void {\n    this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .doc(round.id).update(round).then(\n        () => {\n          this.log(`update round w/ game id=${gameId} roundId = ${round.id}`);\n        },\n        err =>  this.log(`Error updateRound w/ id=${gameId}`)\n      );\n  }\n\n  deleteRound(roundId: string, gameId: string): void {\n    this.store.collection(Collection.Games)\n    .doc(gameId)\n    .collection(Collection.Rounds)\n    .doc(roundId).delete().then(\n        () => {\n          this.log(`deleted round w/ id=${roundId}`);\n        },\n        err =>  this.log(`ERROR deleteRound w/ id=${roundId}`)\n      );\n  }\n\n  private log(message: string): void {\n    this.messageService.add(`RoundService: ${message}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { EMPTY, from, Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Table } from 'src/app/components/table/table';\nimport { Collection } from '../collection';\nimport { MessageService } from '../message/message.service';\nimport { TeamService } from '../team/team.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableService {\n\n  constructor(\n    private messageService: MessageService,\n    private store: AngularFirestore,\n    private teamService: TeamService) { }\n\n  addTable(table: Table, roundId: string, gameId: string): Observable<Table | void> {\n    return from(this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .doc(roundId)\n      .collection(Collection.Tables)\n      .add(table).then(\n      (docRef) => {\n        this.log(`addTable w/ id=${gameId} ${docRef.id}`);\n        table.id = docRef.id;\n        return table;\n      },\n      err =>  this.log(`ERROR addTable w/ id=${table.id}`)\n    ));\n  }\n\n  getTable(tableId: string, roundId: string, gameId: string): Observable<Table | undefined> {\n    return this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .doc(roundId)\n      .collection(Collection.Tables)\n      .doc(tableId)\n      .valueChanges({ idField: 'id' }) as Observable<Table>;\n  }\n\n  getTablesForRound(roundId: string, gameId: string): Observable<Table[] | undefined> {\n    return this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .doc(roundId)\n      .collection(Collection.Tables)\n      .valueChanges({ idField: 'id' }) as Observable<Table[]>;\n  }\n\n  getTableForPlayer(playerId: string, roundId: string, gameId: string): Observable<Table | undefined> {\n    const tables$ = this.getTablesForRound(roundId, gameId);\n\n    return tables$.pipe(\n      switchMap((tables) => {\n        let returnTable: Table;\n\n        tables.map((table) => {\n\n          if (table.playerIds.find((tablePlayerId) => tablePlayerId === playerId)) {\n            returnTable = table;\n          }\n        });\n\n        return of(returnTable);\n      }\n    ));\n  }\n\n  updateTable(table: Table, roundId: string, gameId: string): void {\n    this.store.collection(Collection.Games)\n    .doc(gameId)\n    .collection(Collection.Rounds)\n    .doc(roundId)\n    .collection(Collection.Tables)\n    .doc(table.id)\n    .update(table).then(\n      () => {\n        this.log(`updateTable w/ id=${gameId} ${table.id}`);\n      },\n      err =>  this.log(`ERROR updateTable w/ id=${table.id}`)\n    );\n  }\n\n  deleteTable(tableId: string, roundId: string, gameId: string): void {\n    this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .doc(roundId)\n      .collection(Collection.Tables)\n      .doc(tableId)\n      .delete().then(\n      () => {\n        this.log(`deleteTable w/ id=${gameId} ${tableId}`);\n      },\n      err =>  this.log(`ERROR deleteTable w/ id=${tableId}`)\n    );\n  }\n\n  private log(message: string): void {\n    this.messageService.add(`TableService: ${message}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { combineLatest, empty, EMPTY, from, Observable, of } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { GamePlayer } from 'src/app/components/player/game-player';\nimport { Team } from 'src/app/components/team/team';\nimport { Collection } from '../collection';\nimport { MessageService } from '../message/message.service';\nimport { Round } from '../round/round';\nimport { RoundService } from '../round/round.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  constructor(private messageService: MessageService, private store: AngularFirestore) { }\n\n  addTeam(team: Team, tableId: string, roundId: string, gameId: string): void {\n    this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .doc(roundId)\n      .collection(Collection.Tables)\n      .doc(tableId)\n      .collection(Collection.Teams)\n      .add(team).then(\n      (docRef) => {\n        this.log(`addTeam w/ id=${gameId} ${docRef.id}`);\n        team.id = docRef.id;\n        return team;\n      },\n      err =>  this.log(`ERROR addTeam w/ id=${team.id}`)\n    );\n  }\n\n  getTeam(teamId: string, tableId: string, roundId: string, gameId: string): Observable<Team | undefined> {\n    return this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .doc(roundId)\n      .collection(Collection.Tables)\n      .doc(tableId)\n      .collection(Collection.Teams)\n      .doc(teamId)\n      .valueChanges({ idField: 'id' }) as Observable<Team>;\n  }\n\n  getTeamsForTable(tableId: string, roundId: string, gameId: string): Observable<Team[] | undefined> {\n    return this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .doc(roundId)\n      .collection(Collection.Tables)\n      .doc(tableId)\n      .collection(Collection.Teams)\n      .valueChanges({ idField: 'id' }) as Observable<Team[]>;\n  }\n\n  updateTeam(team: Team, tableId: string, roundId: string, gameId: string): Observable<Team | void> {\n    this.log('updateTeam');\n    return from(this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .doc(roundId)\n      .collection(Collection.Tables)\n      .doc(tableId)\n      .collection(Collection.Teams)\n      .doc(team.id)\n      .update(team).then(\n        (docRef) => {\n          this.log(`updateTeam w/ id=${gameId} ${team.id}`);\n          return docRef;\n        },\n        err =>  this.log(`ERROR updateTeam w/ id=${team.id}`)\n      )\n    );\n  }\n\n  deleteTeam(teamId: string, tableId: string, roundId: string, gameId: string): void {\n    this.store.collection(Collection.Games)\n      .doc(gameId)\n      .collection(Collection.Rounds)\n      .doc(roundId)\n      .collection(Collection.Tables)\n      .doc(tableId)\n      .collection(Collection.Teams)\n      .doc(teamId)\n      .delete().then(\n      () => {\n        this.log(`deleteTeam w/ id=${gameId} ${teamId}`);\n      },\n      err =>  this.log(`ERROR deleteTeam w/ id=${teamId}`)\n    );\n  }\n\n  private log(message: string): void {\n    this.messageService.add(`TeamService: ${message}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // url: 'https://torneo.com',\n  url: 'http://192.168.0.44:4200',\n  firebase: {\n    apiKey: \"AIzaSyBXfstBvichb-xN3QAYd4Xx_03-j3FMaxA\",\n    authDomain: \"tourney-84ede.firebaseapp.com\",\n    projectId: \"tourney-84ede\",\n    storageBucket: \"tourney-84ede.appspot.com\",\n    messagingSenderId: \"720024685972\",\n    appId: \"1:720024685972:web:27d438c5628bc965749381\",\n    measurementId: \"G-DJDJLLFS6V\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["firebase","LoginDialogComponent","i0","AppComponent","constructor","router","authService","dialog","ngOnInit","isLoggedIn$","ngOnDestroy","subscriptions","forEach","subscription","unsubscribe","login","openDialog","dialogRef","open","panelClass","push","afterClosed","subscribe","result","console","log","logout","auth","signOut","goHome","navigateByUrl","userProfile","selectors","decls","vars","consts","template","ctx","of","environment","ProgressDialogComponent","GameConfigurationComponent","route","gameService","location","getGame","gameId","snapshot","paramMap","get","gameURL","url","next","game","isAdmin$","isCurrentUserAdmin","id","sectionName","name","toUpperCase","close","goBack","back","save","updateGame","startGame","ctx_r4","GamesComponent","Map","getGames","games$","games","map","gameAdminMap","set","isGameAdmin","add","trim","currentUser","getCurrentUser","addGame","uid","configuration","delete","deleteGame","dashboard","adminIds","find","adminId","ConfirmDialogComponent","i_r6","ctx_r8","GamePlayersComponent","playerService","roundService","getPlayers","loggedIn","checkIsGameJoinable","playersForGame","players","sort","a","b","playerAPoints","calculateTotalPoints","playerBPoints","player","isGameJoinable$","roundsForGame","rounds","length","totalPoints","pointsForRound","roundPoints","points","displayName","addPlayerToGame","addPlayer","joinGame","createPlayerFromCurrentUser","showJoinDialog","currentUser$","newPlayer","data","title","message","confirmButtonText","showLoginDialog","inputs","PlayerCardComponent","calculatePoints","deletePlayer","view","position","Subject","debounceTime","distinctUntilChanged","switchMap","PlayerSearchComponent","search","term","searchTerms","players$","pipe","searchPlayers","Subscription","RoundCardComponent","roundMediatorService","allTablesPointsConfirmed$","allTablesConfirmed","round","deleteRound","take","RoundDetailComponent","tableService","roundId","getRound","getTables","unConfirmedTables$","unconfirmedTables","endRound","confirmed","updatePlayerPoints","number","updateByePlayerPoints","complete","getTablesForRound","tables","LoginComponent","showLogin"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}